let e=Math.random();const t=(e,t)=>e.getAttribute(t),s=e=>e.trim().replace(/\s\s+/g," ");customElements.define("grid-it",class extends HTMLElement{static get observedAttributes(){return["areas","rows","columns"]}attributeChangedCallback(e,t,s){}connectedCallback(){let l=((t="")=>(t+e++).replace(".",""))("g_");this.style.display="grid";let n=s(t(this,"rows")),i=s(t(this,"columns")),r=s(t(this,"areas")),a=((e,t,s,l)=>{let n=(i=s.split(" "),r=t,Array.from({length:i.length/r},((e,t)=>i.slice(t*r,t*r+r))));var i,r;let a=[];for(let e=0;e<n.length;e++)a.push(`'${n[e].map((e=>l+"_"+e)).join(" ")}'`);return[a.length===e*t,a.join(" ")]})(n.split(" ").length,i.split(" ").length,r,l);if(a[0]){this.style["grid-template-rows"]=n,this.style["grid-template-columns"]=i,this.style["grid-template-areas"]=a[1];let e=[...new Set(a[1].split(" "))].sort();((e,t,s)=>{for(let l=0,n=e.length;l<n;l++)e[l].style["grid-area"]=s+"_"+t[l]})(this.children,e,l)}}}),customElements.define("center-it",class extends HTMLElement{connectedCallback(){this.style.display="flex",this.style.justifyContent="center",this.style.alignItems="center"}}),function(e){const t="string"==typeof e?[e]:[e[0]];for(let s=1,{length:l}=arguments;s<l;s++)t.push(arguments[s],e[s]);const s=document.createElement("style");s.type="text/css",s.appendChild(document.createTextNode(t.join(""))),document.head.appendChild(s)}("\n    html, body {\n        padding:0;\n        margin:0;\n    }\n    *, *::before, *::after {\n        box-sizing: border-box;\n    }");
